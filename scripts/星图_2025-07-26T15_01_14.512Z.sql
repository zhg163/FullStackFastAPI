CREATE TABLE "roles_dir" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	-- 游戏、动漫、小说
	"ip" VARCHAR(255) NOT NULL,
	"ip_desc" VARCHAR(255),
	"created_at" TIMESTAMP,
	PRIMARY KEY("id")
);

COMMENT ON TABLE "roles_dir" IS '星图角色分类';
COMMENT ON COLUMN "roles_dir"."ip" IS '游戏、动漫、小说';


CREATE TABLE "roles" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	-- 角色名称
	"name" VARCHAR(60) NOT NULL,
	-- 游戏、动漫、小说
	"ip_id" INTEGER NOT NULL,
	-- 创建端
	"create_from" VARCHAR(255),
	"created_at" TIMESTAMP,
	"has_prompts" CHAR(1),
	PRIMARY KEY("id")
);

COMMENT ON TABLE "roles" IS '星图角色';
COMMENT ON COLUMN "roles"."name" IS '角色名称';
COMMENT ON COLUMN "roles"."ip_id" IS '游戏、动漫、小说';
COMMENT ON COLUMN "roles"."create_from" IS '创建端';


CREATE TABLE "role_prompt" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"role_id" INTEGER NOT NULL,
	"version" SMALLINT NOT NULL,
	"user_prompt" JSON NOT NULL,
	"is_active" CHAR(1),
	"created_at" TIMESTAMP,
	PRIMARY KEY("id")
) ;

COMMENT ON TABLE "role_prompt" IS '角色提示词';


CREATE TABLE "role_template" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	-- 星图角色id
	"role_id" INTEGER NOT NULL,
	"template_name" VARCHAR(255),
	"is_active" CHAR(1),
	"created_at" TIMESTAMP,
	PRIMARY KEY("id")
);

COMMENT ON TABLE "role_template" IS '角色模版';
COMMENT ON COLUMN "role_template"."role_id" IS '星图角色id';


CREATE TABLE "role_template_item" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"role_tmp_id" INTEGER NOT NULL,
	"item_name" VARCHAR(255) NOT NULL,
	"item_prompt_desc" TEXT,
	"created_at" TIMESTAMP,
	PRIMARY KEY("id")
) ;

COMMENT ON TABLE "role_template_item" IS '角色模版条目';





CREATE TABLE "task_creat_role_prompt" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"task_name" VARCHAR(255),
	"task_state" CHAR(1),
	"task_cmd" JSON,
	"role_id" INTEGER,
	"role_item_prompt" JSON,
	"created_at" TIMESTAMP,
	PRIMARY KEY("id")
);

COMMENT ON TABLE "task_creat_role_prompt" IS '角色创建提示词任务';



ALTER TABLE "role_prompt"
ADD FOREIGN KEY("role_id") REFERENCES "roles"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "roles"
ADD FOREIGN KEY("ip_id") REFERENCES "roles_dir"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "role_template"
ADD FOREIGN KEY("role_id") REFERENCES "roles"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "role_template_item"
ADD FOREIGN KEY("role_tmp_id") REFERENCES "role_template"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;
ALTER TABLE "task_creat_role_prompt"
ADD FOREIGN KEY("role_id") REFERENCES "roles"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;



-- 1. 插入IP分类表 (roles_dir)
INSERT INTO roles_dir (ip, ip_desc, created_at) 
VALUES ('原神', '开放世界角色扮演游戏', NOW())
RETURNING id; -- 假设返回id=1

-- 2. 插入角色表 (roles)
INSERT INTO roles (name, ip_id, create_from, created_at, has_prompts)
VALUES ('可莉', 1, 'web管理端', NOW(), 'Y')
RETURNING id; -- 假设返回id=1

-- 3. 插入角色模板表 (role_template)
INSERT INTO role_template (role_id, template_name, is_active, created_at)
VALUES (1, '基础战斗模板', 'Y', NOW())
RETURNING id; -- 假设返回id=1

-- 4. 插入模板条目表 (role_template_item)
INSERT INTO role_template_item (role_tmp_id, item_name, item_prompt_desc, created_at)
VALUES (1, '技能模块', '火元素爆炸攻击描述', NOW());

-- 5. 插入提示词表 (role_prompt)
INSERT INTO role_prompt (role_id, version, user_prompt, is_active, created_at)
VALUES (
    1, 
    1, 
    '{"system": "你是一个活泼的小女孩角色", "background": "蒙德城火花骑士"}'::JSON, 
    'Y', 
    NOW()
);

-- 6. 插入任务表 (task_creat_role_prompt)
INSERT INTO task_creat_role_prompt (task_name, task_state, task_cmd, role_id, role_item_prompt, created_at)
VALUES (
    '初始化可莉角色', 
    'C', 
    '{"command": "create_full_role", "params": {"version": 1}}'::JSON, 
    1, 
    '{"prompt_type": "basic"}'::JSON, 
    NOW()
);



-- 1. 插入IP分类表 (roles_dir)
INSERT INTO roles_dir (ip, ip_desc, created_at) 
VALUES ('原神', '开放世界角色扮演游戏', NOW())
RETURNING id; -- 假设返回id=1

-- 2. 插入角色表 (roles)
INSERT INTO roles (name, ip_id, create_from, created_at, has_prompts)
VALUES ('可莉', 1, 'web管理端', NOW(), 'Y')
RETURNING id; -- 假设返回id=1

-- 3. 插入角色模板表 (role_template)
INSERT INTO role_template (role_id, template_name, is_active, created_at)
VALUES (1, '基础战斗模板', 'Y', NOW())
RETURNING id; -- 假设返回id=1

-- 4. 插入模板条目表 (role_template_item)
INSERT INTO role_template_item (role_tmp_id, item_name, item_prompt_desc, created_at)
VALUES (1, '技能模块', '火元素爆炸攻击描述', NOW());

-- 5. 插入提示词表 (role_prompt)
INSERT INTO role_prompt (role_id, version, user_prompt, is_active, created_at)
VALUES (
    1, 
    1, 
    '{"system": "你是一个活泼的小女孩角色", "background": "蒙德城火花骑士"}'::JSON, 
    'Y', 
    NOW()
);

-- 6. 插入任务表 (task_creat_role_prompt)
INSERT INTO task_creat_role_prompt (task_name, task_state, task_cmd, role_id, role_item_prompt, created_at)
VALUES (
    '初始化可莉角色', 
    'C', 
    '{"command": "create_full_role", "params": {"version": 1}}'::JSON, 
    1, 
    '{"prompt_type": "basic"}'::JSON, 
    NOW()
);