# 本地Docker镜像部署配置
# 使用本地构建的镜像，不依赖远程仓库
version: "3.8"

services:
  # PostgreSQL数据库
  db:
    image: postgres:17
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env.production
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - backend-network
    ports:
      - "5432:5432"

  # 数据库管理工具
  adminer:
    image: adminer
    restart: always
    depends_on:
      - db
    environment:
      - ADMINER_DESIGN=pepa-linha-dark
    networks:
      - backend-network
    ports:
      - "8080:8080"

  # 后端预启动服务 - 负责数据库迁移和初始化
  prestart:
    image: fullstack-fastapi-backend:latest
    build:
      context: ./backend
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env.production
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - PROJECT_NAME=${PROJECT_NAME}
    networks:
      - backend-network
    command: python /app/app/backend_pre_start.py && alembic upgrade head && python /app/app/initial_data.py

  # 后端API服务
  backend:
    image: fullstack-fastapi-backend:latest
    build:
      context: ./backend
    restart: always
    depends_on:
      db:
        condition: service_healthy
      prestart:
        condition: service_completed_successfully
    env_file:
      - .env.production
    environment:
      - DOMAIN=${DOMAIN}
      - FRONTEND_HOST=${FRONTEND_HOST}
      - ENVIRONMENT=production
      - PROJECT_NAME=${PROJECT_NAME}
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS}
      - SECRET_KEY=${SECRET_KEY}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD}
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - frontend-network
      - backend-network
    ports:
      - "8000:8000"

  # 前端应用服务
  frontend:
    image: fullstack-fastapi-frontend:latest
    build:
      context: ./frontend
      args:
        - VITE_API_URL=${VITE_API_URL:-http://localhost}
    restart: always
    depends_on:
      - backend
    networks:
      - frontend-network
    ports:
      - "3000:80"

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    restart: always
    depends_on:
      - backend
      - frontend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - frontend-network
      - backend-network
    ports:
      - "80:80"
      - "3001:8080"

volumes:
  app-db-data:

networks:
  frontend-network:
  backend-network:
